State 84 conflicts: 12 shift/reduce, 12 reduce/reduce
State 135 conflicts: 11 shift/reduce, 15 reduce/reduce
State 137 conflicts: 11 shift/reduce, 15 reduce/reduce
State 149 conflicts: 11 shift/reduce, 15 reduce/reduce
State 160 conflicts: 11 shift/reduce, 15 reduce/reduce
State 161 conflicts: 2 shift/reduce, 4 reduce/reduce
State 162 conflicts: 2 shift/reduce, 3 reduce/reduce


Grammar

    0 $accept: programme $end

    1 programme: liste_declarations liste_fonctions

    2 liste_declarations: liste_declarations declaration
    3                   | ε

    4 liste_fonctions: liste_fonctions fonction
    5                | fonction

    6 declaration: type liste_declarateurs ';'
    7            | type liste_declarateurs '=' expression ';'

    8 liste_declarateurs: liste_declarateurs ',' declarateur
    9                   | declarateur

   10 declarateur: IDENTIFICATEUR
   11            | declarateur '[' CONSTANTE ']'

   12 ouverture_fonction: ε

   13 fonction: type IDENTIFICATEUR '(' liste_parms ')' ouverture_fonction bloc
   14         | EXTERN type IDENTIFICATEUR '(' liste_parms ')' ';'

   15 type: VOID
   16     | INT

   17 liste_parms: parm
   18            | liste_parms ',' parm
   19            | ε

   20 parm: INT IDENTIFICATEUR

   21 liste_instructions: liste_instructions instruction
   22                   | ε

   23 instruction: affectation ';'
   24            | expression ';'
   25            | iteration
   26            | selection
   27            | saut
   28            | bloc
   29            | ε

   30 iteration: FOR '(' affectation ';' condition ';' affectation ')' instruction
   31          | WHILE '(' condition ')' instruction

   32 selection: IF '(' condition ')' instruction
   33          | IF '(' condition ')' instruction ELSE instruction
   34          | SWITCH '(' expression ')' '{' liste_cases_opt default_opt '}'

   35 liste_cases_opt: liste_cases

   36 liste_cases: liste_cases case
   37            | case

   38 case: CASE CONSTANTE ':' instruction saut

   39 default_opt: DEFAULT ':' instruction saut

   40 saut: BREAK ';'
   41     | RETURN ';'
   42     | RETURN expression ';'
   43     | ε

   44 affectation: variable '=' expression

   45 opn_bloc: '{'

   46 close_bloc: '}'

   47 bloc: opn_bloc liste_declarations liste_instructions close_bloc

   48 variable: IDENTIFICATEUR
   49         | IDENTIFICATEUR dimension_utilisation

   50 dimension_utilisation: dimension_utilisation '[' expression ']'
   51                      | '[' expression ']'

   52 expression: '(' expression ')'
   53           | MOINS expression
   54           | expression PLUS expression
   55           | expression MOINS expression
   56           | expression MUL expression
   57           | expression DIV expression
   58           | expression LSHIFT expression
   59           | expression RSHIFT expression
   60           | expression BAND expression
   61           | expression BOR expression
   62           | CONSTANTE
   63           | variable
   64           | IDENTIFICATEUR '(' liste_expressions ')'

   65 liste_expressions: liste_expressions ',' expression
   66                  | expression
   67                  | ε

   68 condition: NOT '(' condition ')'
   69          | condition binary_rel condition
   70          | '(' condition ')'
   71          | expression binary_comp expression

   72 binary_rel: LAND
   73           | LOR

   74 binary_comp: LT
   75            | GT
   76            | GEQ
   77            | LEQ
   78            | EQ
   79            | NEQ


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 13 14 30 31 32 33 34 52 64 68 70
    ')' (41) 13 14 30 31 32 33 34 52 64 68 70
    ',' (44) 8 18 65
    ':' (58) 38 39
    ';' (59) 6 7 14 23 24 30 40 41 42
    '=' (61) 7 44
    '[' (91) 11 50 51
    ']' (93) 11 50 51
    '{' (123) 34 45
    '}' (125) 34 46
    error (256)
    CONSTANTE <entier> (258) 11 38 62
    IDENTIFICATEUR <chaine> (259) 10 13 14 20 48 49 64
    VOID (260) 15
    INT (261) 16 20
    FOR (262) 30
    WHILE (263) 31
    IF (264) 32 33
    ELSE (265) 33
    SWITCH (266) 34
    CASE (267) 38
    DEFAULT (268) 39
    BREAK (269) 40
    RETURN (270) 41 42
    PLUS (271) 54
    MOINS (272) 53 55
    MUL (273) 56
    DIV (274) 57
    LSHIFT (275) 58
    RSHIFT (276) 59
    BAND (277) 60
    BOR (278) 61
    LAND (279) 72
    LOR (280) 73
    LT (281) 74
    GT (282) 75
    GEQ (283) 76
    LEQ (284) 77
    EQ (285) 78
    NEQ (286) 79
    NOT (287) 68
    EXTERN (288) 14
    THEN (289)
    MOINSUNAIRE (290)
    REL (291)


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    programme (48)
        on left: 1
        on right: 0
    liste_declarations <node_table> (49)
        on left: 2 3
        on right: 1 2 47
    liste_fonctions <node_list> (50)
        on left: 4 5
        on right: 1 4
    declaration <node_list> (51)
        on left: 6 7
        on right: 2
    liste_declarateurs <node_list> (52)
        on left: 8 9
        on right: 6 7 8
    declarateur <node> (53)
        on left: 10 11
        on right: 8 9 11
    ouverture_fonction <node> (54)
        on left: 12
        on right: 13
    fonction <node> (55)
        on left: 13 14
        on right: 4 5
    type <type> (56)
        on left: 15 16
        on right: 6 7 13 14
    liste_parms <node_list> (57)
        on left: 17 18 19
        on right: 13 14 18
    parm <node> (58)
        on left: 20
        on right: 17 18
    liste_instructions <node_list> (59)
        on left: 21 22
        on right: 21 47
    instruction <node> (60)
        on left: 23 24 25 26 27 28 29
        on right: 21 30 31 32 33 38 39
    iteration <node> (61)
        on left: 30 31
        on right: 25
    selection <node> (62)
        on left: 32 33 34
        on right: 26
    liste_cases_opt <node_list> (63)
        on left: 35
        on right: 34
    liste_cases <node_list> (64)
        on left: 36 37
        on right: 35 36
    case <node> (65)
        on left: 38
        on right: 36 37
    default_opt <node> (66)
        on left: 39
        on right: 34
    saut <node> (67)
        on left: 40 41 42 43
        on right: 27 38 39
    affectation <node> (68)
        on left: 44
        on right: 23 30
    opn_bloc (69)
        on left: 45
        on right: 47
    close_bloc (70)
        on left: 46
        on right: 47
    bloc <node> (71)
        on left: 47
        on right: 13 28
    variable <node> (72)
        on left: 48 49
        on right: 44 63
    dimension_utilisation <node_list> (73)
        on left: 50 51
        on right: 49 50
    expression <node> (74)
        on left: 52 53 54 55 56 57 58 59 60 61 62 63 64
        on right: 7 24 34 42 44 50 51 52 53 54 55 56 57 58 59 60 61 65 66 71
    liste_expressions <node_list> (75)
        on left: 65 66 67
        on right: 64 65
    condition <node> (76)
        on left: 68 69 70 71
        on right: 30 31 32 33 68 69 70
    binary_rel (77)
        on left: 72 73
        on right: 69
    binary_comp <chaine> (78)
        on left: 74 75 76 77 78 79
        on right: 71


State 0

    0 $accept: • programme $end

    $default  reduce using rule 3 (liste_declarations)

    programme           go to state 1
    liste_declarations  go to state 2


State 1

    0 $accept: programme • $end

    $end  shift, and go to state 3


State 2

    1 programme: liste_declarations • liste_fonctions
    2 liste_declarations: liste_declarations • declaration

    VOID    shift, and go to state 4
    INT     shift, and go to state 5
    EXTERN  shift, and go to state 6

    liste_fonctions  go to state 7
    declaration      go to state 8
    fonction         go to state 9
    type             go to state 10


State 3

    0 $accept: programme $end •

    $default  accept


State 4

   15 type: VOID •

    $default  reduce using rule 15 (type)


State 5

   16 type: INT •

    $default  reduce using rule 16 (type)


State 6

   14 fonction: EXTERN • type IDENTIFICATEUR '(' liste_parms ')' ';'

    VOID  shift, and go to state 4
    INT   shift, and go to state 5

    type  go to state 11


State 7

    1 programme: liste_declarations liste_fonctions •
    4 liste_fonctions: liste_fonctions • fonction

    VOID    shift, and go to state 4
    INT     shift, and go to state 5
    EXTERN  shift, and go to state 6

    $default  reduce using rule 1 (programme)

    fonction  go to state 12
    type      go to state 13


State 8

    2 liste_declarations: liste_declarations declaration •

    $default  reduce using rule 2 (liste_declarations)


State 9

    5 liste_fonctions: fonction •

    $default  reduce using rule 5 (liste_fonctions)


State 10

    6 declaration: type • liste_declarateurs ';'
    7            | type • liste_declarateurs '=' expression ';'
   13 fonction: type • IDENTIFICATEUR '(' liste_parms ')' ouverture_fonction bloc

    IDENTIFICATEUR  shift, and go to state 14

    liste_declarateurs  go to state 15
    declarateur         go to state 16


State 11

   14 fonction: EXTERN type • IDENTIFICATEUR '(' liste_parms ')' ';'

    IDENTIFICATEUR  shift, and go to state 17


State 12

    4 liste_fonctions: liste_fonctions fonction •

    $default  reduce using rule 4 (liste_fonctions)


State 13

   13 fonction: type • IDENTIFICATEUR '(' liste_parms ')' ouverture_fonction bloc

    IDENTIFICATEUR  shift, and go to state 18


State 14

   10 declarateur: IDENTIFICATEUR •
   13 fonction: type IDENTIFICATEUR • '(' liste_parms ')' ouverture_fonction bloc

    '('  shift, and go to state 19

    $default  reduce using rule 10 (declarateur)


State 15

    6 declaration: type liste_declarateurs • ';'
    7            | type liste_declarateurs • '=' expression ';'
    8 liste_declarateurs: liste_declarateurs • ',' declarateur

    '='  shift, and go to state 20
    ';'  shift, and go to state 21
    ','  shift, and go to state 22


State 16

    9 liste_declarateurs: declarateur •
   11 declarateur: declarateur • '[' CONSTANTE ']'

    '['  shift, and go to state 23

    $default  reduce using rule 9 (liste_declarateurs)


State 17

   14 fonction: EXTERN type IDENTIFICATEUR • '(' liste_parms ')' ';'

    '('  shift, and go to state 24


State 18

   13 fonction: type IDENTIFICATEUR • '(' liste_parms ')' ouverture_fonction bloc

    '('  shift, and go to state 19


State 19

   13 fonction: type IDENTIFICATEUR '(' • liste_parms ')' ouverture_fonction bloc

    INT  shift, and go to state 25

    $default  reduce using rule 19 (liste_parms)

    liste_parms  go to state 26
    parm         go to state 27


State 20

    7 declaration: type liste_declarateurs '=' • expression ';'

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    MOINS           shift, and go to state 30
    '('             shift, and go to state 31

    variable    go to state 32
    expression  go to state 33


State 21

    6 declaration: type liste_declarateurs ';' •

    $default  reduce using rule 6 (declaration)


State 22

    8 liste_declarateurs: liste_declarateurs ',' • declarateur

    IDENTIFICATEUR  shift, and go to state 34

    declarateur  go to state 35


State 23

   11 declarateur: declarateur '[' • CONSTANTE ']'

    CONSTANTE  shift, and go to state 36


State 24

   14 fonction: EXTERN type IDENTIFICATEUR '(' • liste_parms ')' ';'

    INT  shift, and go to state 25

    $default  reduce using rule 19 (liste_parms)

    liste_parms  go to state 37
    parm         go to state 27


State 25

   20 parm: INT • IDENTIFICATEUR

    IDENTIFICATEUR  shift, and go to state 38


State 26

   13 fonction: type IDENTIFICATEUR '(' liste_parms • ')' ouverture_fonction bloc
   18 liste_parms: liste_parms • ',' parm

    ','  shift, and go to state 39
    ')'  shift, and go to state 40


State 27

   17 liste_parms: parm •

    $default  reduce using rule 17 (liste_parms)


State 28

   62 expression: CONSTANTE •

    $default  reduce using rule 62 (expression)


State 29

   48 variable: IDENTIFICATEUR •
   49         | IDENTIFICATEUR • dimension_utilisation
   64 expression: IDENTIFICATEUR • '(' liste_expressions ')'

    '['  shift, and go to state 41
    '('  shift, and go to state 42

    $default  reduce using rule 48 (variable)

    dimension_utilisation  go to state 43


State 30

   53 expression: MOINS • expression

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    MOINS           shift, and go to state 30
    '('             shift, and go to state 31

    variable    go to state 32
    expression  go to state 44


State 31

   52 expression: '(' • expression ')'

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    MOINS           shift, and go to state 30
    '('             shift, and go to state 31

    variable    go to state 32
    expression  go to state 45


State 32

   63 expression: variable •

    $default  reduce using rule 63 (expression)


State 33

    7 declaration: type liste_declarateurs '=' expression • ';'
   54 expression: expression • PLUS expression
   55           | expression • MOINS expression
   56           | expression • MUL expression
   57           | expression • DIV expression
   58           | expression • LSHIFT expression
   59           | expression • RSHIFT expression
   60           | expression • BAND expression
   61           | expression • BOR expression

    PLUS    shift, and go to state 46
    MOINS   shift, and go to state 47
    MUL     shift, and go to state 48
    DIV     shift, and go to state 49
    LSHIFT  shift, and go to state 50
    RSHIFT  shift, and go to state 51
    BAND    shift, and go to state 52
    BOR     shift, and go to state 53
    ';'     shift, and go to state 54


State 34

   10 declarateur: IDENTIFICATEUR •

    $default  reduce using rule 10 (declarateur)


State 35

    8 liste_declarateurs: liste_declarateurs ',' declarateur •
   11 declarateur: declarateur • '[' CONSTANTE ']'

    '['  shift, and go to state 23

    $default  reduce using rule 8 (liste_declarateurs)


State 36

   11 declarateur: declarateur '[' CONSTANTE • ']'

    ']'  shift, and go to state 55


State 37

   14 fonction: EXTERN type IDENTIFICATEUR '(' liste_parms • ')' ';'
   18 liste_parms: liste_parms • ',' parm

    ','  shift, and go to state 39
    ')'  shift, and go to state 56


State 38

   20 parm: INT IDENTIFICATEUR •

    $default  reduce using rule 20 (parm)


State 39

   18 liste_parms: liste_parms ',' • parm

    INT  shift, and go to state 25

    parm  go to state 57


State 40

   13 fonction: type IDENTIFICATEUR '(' liste_parms ')' • ouverture_fonction bloc

    $default  reduce using rule 12 (ouverture_fonction)

    ouverture_fonction  go to state 58


State 41

   51 dimension_utilisation: '[' • expression ']'

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    MOINS           shift, and go to state 30
    '('             shift, and go to state 31

    variable    go to state 32
    expression  go to state 59


State 42

   64 expression: IDENTIFICATEUR '(' • liste_expressions ')'

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    MOINS           shift, and go to state 30
    '('             shift, and go to state 31

    $default  reduce using rule 67 (liste_expressions)

    variable           go to state 32
    expression         go to state 60
    liste_expressions  go to state 61


State 43

   49 variable: IDENTIFICATEUR dimension_utilisation •
   50 dimension_utilisation: dimension_utilisation • '[' expression ']'

    '['  shift, and go to state 62

    $default  reduce using rule 49 (variable)


State 44

   53 expression: MOINS expression •
   54           | expression • PLUS expression
   55           | expression • MOINS expression
   56           | expression • MUL expression
   57           | expression • DIV expression
   58           | expression • LSHIFT expression
   59           | expression • RSHIFT expression
   60           | expression • BAND expression
   61           | expression • BOR expression

    $default  reduce using rule 53 (expression)


State 45

   52 expression: '(' expression • ')'
   54           | expression • PLUS expression
   55           | expression • MOINS expression
   56           | expression • MUL expression
   57           | expression • DIV expression
   58           | expression • LSHIFT expression
   59           | expression • RSHIFT expression
   60           | expression • BAND expression
   61           | expression • BOR expression

    PLUS    shift, and go to state 46
    MOINS   shift, and go to state 47
    MUL     shift, and go to state 48
    DIV     shift, and go to state 49
    LSHIFT  shift, and go to state 50
    RSHIFT  shift, and go to state 51
    BAND    shift, and go to state 52
    BOR     shift, and go to state 53
    ')'     shift, and go to state 63


State 46

   54 expression: expression PLUS • expression

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    MOINS           shift, and go to state 30
    '('             shift, and go to state 31

    variable    go to state 32
    expression  go to state 64


State 47

   55 expression: expression MOINS • expression

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    MOINS           shift, and go to state 30
    '('             shift, and go to state 31

    variable    go to state 32
    expression  go to state 65


State 48

   56 expression: expression MUL • expression

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    MOINS           shift, and go to state 30
    '('             shift, and go to state 31

    variable    go to state 32
    expression  go to state 66


State 49

   57 expression: expression DIV • expression

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    MOINS           shift, and go to state 30
    '('             shift, and go to state 31

    variable    go to state 32
    expression  go to state 67


State 50

   58 expression: expression LSHIFT • expression

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    MOINS           shift, and go to state 30
    '('             shift, and go to state 31

    variable    go to state 32
    expression  go to state 68


State 51

   59 expression: expression RSHIFT • expression

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    MOINS           shift, and go to state 30
    '('             shift, and go to state 31

    variable    go to state 32
    expression  go to state 69


State 52

   60 expression: expression BAND • expression

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    MOINS           shift, and go to state 30
    '('             shift, and go to state 31

    variable    go to state 32
    expression  go to state 70


State 53

   61 expression: expression BOR • expression

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    MOINS           shift, and go to state 30
    '('             shift, and go to state 31

    variable    go to state 32
    expression  go to state 71


State 54

    7 declaration: type liste_declarateurs '=' expression ';' •

    $default  reduce using rule 7 (declaration)


State 55

   11 declarateur: declarateur '[' CONSTANTE ']' •

    $default  reduce using rule 11 (declarateur)


State 56

   14 fonction: EXTERN type IDENTIFICATEUR '(' liste_parms ')' • ';'

    ';'  shift, and go to state 72


State 57

   18 liste_parms: liste_parms ',' parm •

    $default  reduce using rule 18 (liste_parms)


State 58

   13 fonction: type IDENTIFICATEUR '(' liste_parms ')' ouverture_fonction • bloc

    '{'  shift, and go to state 73

    opn_bloc  go to state 74
    bloc      go to state 75


State 59

   51 dimension_utilisation: '[' expression • ']'
   54 expression: expression • PLUS expression
   55           | expression • MOINS expression
   56           | expression • MUL expression
   57           | expression • DIV expression
   58           | expression • LSHIFT expression
   59           | expression • RSHIFT expression
   60           | expression • BAND expression
   61           | expression • BOR expression

    PLUS    shift, and go to state 46
    MOINS   shift, and go to state 47
    MUL     shift, and go to state 48
    DIV     shift, and go to state 49
    LSHIFT  shift, and go to state 50
    RSHIFT  shift, and go to state 51
    BAND    shift, and go to state 52
    BOR     shift, and go to state 53
    ']'     shift, and go to state 76


State 60

   54 expression: expression • PLUS expression
   55           | expression • MOINS expression
   56           | expression • MUL expression
   57           | expression • DIV expression
   58           | expression • LSHIFT expression
   59           | expression • RSHIFT expression
   60           | expression • BAND expression
   61           | expression • BOR expression
   66 liste_expressions: expression •

    PLUS    shift, and go to state 46
    MOINS   shift, and go to state 47
    MUL     shift, and go to state 48
    DIV     shift, and go to state 49
    LSHIFT  shift, and go to state 50
    RSHIFT  shift, and go to state 51
    BAND    shift, and go to state 52
    BOR     shift, and go to state 53

    $default  reduce using rule 66 (liste_expressions)


State 61

   64 expression: IDENTIFICATEUR '(' liste_expressions • ')'
   65 liste_expressions: liste_expressions • ',' expression

    ','  shift, and go to state 77
    ')'  shift, and go to state 78


State 62

   50 dimension_utilisation: dimension_utilisation '[' • expression ']'

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    MOINS           shift, and go to state 30
    '('             shift, and go to state 31

    variable    go to state 32
    expression  go to state 79


State 63

   52 expression: '(' expression ')' •

    $default  reduce using rule 52 (expression)


State 64

   54 expression: expression • PLUS expression
   54           | expression PLUS expression •
   55           | expression • MOINS expression
   56           | expression • MUL expression
   57           | expression • DIV expression
   58           | expression • LSHIFT expression
   59           | expression • RSHIFT expression
   60           | expression • BAND expression
   61           | expression • BOR expression

    MUL     shift, and go to state 48
    DIV     shift, and go to state 49
    LSHIFT  shift, and go to state 50
    RSHIFT  shift, and go to state 51
    BAND    shift, and go to state 52
    BOR     shift, and go to state 53

    $default  reduce using rule 54 (expression)


State 65

   54 expression: expression • PLUS expression
   55           | expression • MOINS expression
   55           | expression MOINS expression •
   56           | expression • MUL expression
   57           | expression • DIV expression
   58           | expression • LSHIFT expression
   59           | expression • RSHIFT expression
   60           | expression • BAND expression
   61           | expression • BOR expression

    MUL     shift, and go to state 48
    DIV     shift, and go to state 49
    LSHIFT  shift, and go to state 50
    RSHIFT  shift, and go to state 51
    BAND    shift, and go to state 52
    BOR     shift, and go to state 53

    $default  reduce using rule 55 (expression)


State 66

   54 expression: expression • PLUS expression
   55           | expression • MOINS expression
   56           | expression • MUL expression
   56           | expression MUL expression •
   57           | expression • DIV expression
   58           | expression • LSHIFT expression
   59           | expression • RSHIFT expression
   60           | expression • BAND expression
   61           | expression • BOR expression

    LSHIFT  shift, and go to state 50
    RSHIFT  shift, and go to state 51
    BAND    shift, and go to state 52
    BOR     shift, and go to state 53

    $default  reduce using rule 56 (expression)


State 67

   54 expression: expression • PLUS expression
   55           | expression • MOINS expression
   56           | expression • MUL expression
   57           | expression • DIV expression
   57           | expression DIV expression •
   58           | expression • LSHIFT expression
   59           | expression • RSHIFT expression
   60           | expression • BAND expression
   61           | expression • BOR expression

    LSHIFT  shift, and go to state 50
    RSHIFT  shift, and go to state 51
    BAND    shift, and go to state 52
    BOR     shift, and go to state 53

    $default  reduce using rule 57 (expression)


State 68

   54 expression: expression • PLUS expression
   55           | expression • MOINS expression
   56           | expression • MUL expression
   57           | expression • DIV expression
   58           | expression • LSHIFT expression
   58           | expression LSHIFT expression •
   59           | expression • RSHIFT expression
   60           | expression • BAND expression
   61           | expression • BOR expression

    BAND  shift, and go to state 52
    BOR   shift, and go to state 53

    $default  reduce using rule 58 (expression)


State 69

   54 expression: expression • PLUS expression
   55           | expression • MOINS expression
   56           | expression • MUL expression
   57           | expression • DIV expression
   58           | expression • LSHIFT expression
   59           | expression • RSHIFT expression
   59           | expression RSHIFT expression •
   60           | expression • BAND expression
   61           | expression • BOR expression

    BAND  shift, and go to state 52
    BOR   shift, and go to state 53

    $default  reduce using rule 59 (expression)


State 70

   54 expression: expression • PLUS expression
   55           | expression • MOINS expression
   56           | expression • MUL expression
   57           | expression • DIV expression
   58           | expression • LSHIFT expression
   59           | expression • RSHIFT expression
   60           | expression • BAND expression
   60           | expression BAND expression •
   61           | expression • BOR expression

    $default  reduce using rule 60 (expression)


State 71

   54 expression: expression • PLUS expression
   55           | expression • MOINS expression
   56           | expression • MUL expression
   57           | expression • DIV expression
   58           | expression • LSHIFT expression
   59           | expression • RSHIFT expression
   60           | expression • BAND expression
   61           | expression • BOR expression
   61           | expression BOR expression •

    $default  reduce using rule 61 (expression)


State 72

   14 fonction: EXTERN type IDENTIFICATEUR '(' liste_parms ')' ';' •

    $default  reduce using rule 14 (fonction)


State 73

   45 opn_bloc: '{' •

    $default  reduce using rule 45 (opn_bloc)


State 74

   47 bloc: opn_bloc • liste_declarations liste_instructions close_bloc

    $default  reduce using rule 3 (liste_declarations)

    liste_declarations  go to state 80


State 75

   13 fonction: type IDENTIFICATEUR '(' liste_parms ')' ouverture_fonction bloc •

    $default  reduce using rule 13 (fonction)


State 76

   51 dimension_utilisation: '[' expression ']' •

    $default  reduce using rule 51 (dimension_utilisation)


State 77

   65 liste_expressions: liste_expressions ',' • expression

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    MOINS           shift, and go to state 30
    '('             shift, and go to state 31

    variable    go to state 32
    expression  go to state 81


State 78

   64 expression: IDENTIFICATEUR '(' liste_expressions ')' •

    $default  reduce using rule 64 (expression)


State 79

   50 dimension_utilisation: dimension_utilisation '[' expression • ']'
   54 expression: expression • PLUS expression
   55           | expression • MOINS expression
   56           | expression • MUL expression
   57           | expression • DIV expression
   58           | expression • LSHIFT expression
   59           | expression • RSHIFT expression
   60           | expression • BAND expression
   61           | expression • BOR expression

    PLUS    shift, and go to state 46
    MOINS   shift, and go to state 47
    MUL     shift, and go to state 48
    DIV     shift, and go to state 49
    LSHIFT  shift, and go to state 50
    RSHIFT  shift, and go to state 51
    BAND    shift, and go to state 52
    BOR     shift, and go to state 53
    ']'     shift, and go to state 82


State 80

    2 liste_declarations: liste_declarations • declaration
   47 bloc: opn_bloc liste_declarations • liste_instructions close_bloc

    VOID  shift, and go to state 4
    INT   shift, and go to state 5

    $default  reduce using rule 22 (liste_instructions)

    declaration         go to state 8
    type                go to state 83
    liste_instructions  go to state 84


State 81

   54 expression: expression • PLUS expression
   55           | expression • MOINS expression
   56           | expression • MUL expression
   57           | expression • DIV expression
   58           | expression • LSHIFT expression
   59           | expression • RSHIFT expression
   60           | expression • BAND expression
   61           | expression • BOR expression
   65 liste_expressions: liste_expressions ',' expression •

    PLUS    shift, and go to state 46
    MOINS   shift, and go to state 47
    MUL     shift, and go to state 48
    DIV     shift, and go to state 49
    LSHIFT  shift, and go to state 50
    RSHIFT  shift, and go to state 51
    BAND    shift, and go to state 52
    BOR     shift, and go to state 53

    $default  reduce using rule 65 (liste_expressions)


State 82

   50 dimension_utilisation: dimension_utilisation '[' expression ']' •

    $default  reduce using rule 50 (dimension_utilisation)


State 83

    6 declaration: type • liste_declarateurs ';'
    7            | type • liste_declarateurs '=' expression ';'

    IDENTIFICATEUR  shift, and go to state 34

    liste_declarateurs  go to state 15
    declarateur         go to state 16


State 84

   21 liste_instructions: liste_instructions • instruction
   47 bloc: opn_bloc liste_declarations liste_instructions • close_bloc

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    IF              shift, and go to state 87
    SWITCH          shift, and go to state 88
    BREAK           shift, and go to state 89
    RETURN          shift, and go to state 90
    MOINS           shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 73
    '}'             shift, and go to state 91

    CONSTANTE       [reduce using rule 29 (instruction)]
    CONSTANTE       [reduce using rule 43 (saut)]
    IDENTIFICATEUR  [reduce using rule 29 (instruction)]
    IDENTIFICATEUR  [reduce using rule 43 (saut)]
    FOR             [reduce using rule 29 (instruction)]
    FOR             [reduce using rule 43 (saut)]
    WHILE           [reduce using rule 29 (instruction)]
    WHILE           [reduce using rule 43 (saut)]
    IF              [reduce using rule 29 (instruction)]
    IF              [reduce using rule 43 (saut)]
    SWITCH          [reduce using rule 29 (instruction)]
    SWITCH          [reduce using rule 43 (saut)]
    BREAK           [reduce using rule 29 (instruction)]
    BREAK           [reduce using rule 43 (saut)]
    RETURN          [reduce using rule 29 (instruction)]
    RETURN          [reduce using rule 43 (saut)]
    MOINS           [reduce using rule 29 (instruction)]
    MOINS           [reduce using rule 43 (saut)]
    '('             [reduce using rule 29 (instruction)]
    '('             [reduce using rule 43 (saut)]
    '{'             [reduce using rule 29 (instruction)]
    '{'             [reduce using rule 43 (saut)]
    '}'             [reduce using rule 29 (instruction)]
    '}'             [reduce using rule 43 (saut)]

    instruction  go to state 92
    iteration    go to state 93
    selection    go to state 94
    saut         go to state 95
    affectation  go to state 96
    opn_bloc     go to state 74
    close_bloc   go to state 97
    bloc         go to state 98
    variable     go to state 99
    expression   go to state 100


State 85

   30 iteration: FOR • '(' affectation ';' condition ';' affectation ')' instruction

    '('  shift, and go to state 101


State 86

   31 iteration: WHILE • '(' condition ')' instruction

    '('  shift, and go to state 102


State 87

   32 selection: IF • '(' condition ')' instruction
   33          | IF • '(' condition ')' instruction ELSE instruction

    '('  shift, and go to state 103


State 88

   34 selection: SWITCH • '(' expression ')' '{' liste_cases_opt default_opt '}'

    '('  shift, and go to state 104


State 89

   40 saut: BREAK • ';'

    ';'  shift, and go to state 105


State 90

   41 saut: RETURN • ';'
   42     | RETURN • expression ';'

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    MOINS           shift, and go to state 30
    ';'             shift, and go to state 106
    '('             shift, and go to state 31

    variable    go to state 32
    expression  go to state 107


State 91

   46 close_bloc: '}' •

    $default  reduce using rule 46 (close_bloc)


State 92

   21 liste_instructions: liste_instructions instruction •

    $default  reduce using rule 21 (liste_instructions)


State 93

   25 instruction: iteration •

    $default  reduce using rule 25 (instruction)


State 94

   26 instruction: selection •

    $default  reduce using rule 26 (instruction)


State 95

   27 instruction: saut •

    $default  reduce using rule 27 (instruction)


State 96

   23 instruction: affectation • ';'

    ';'  shift, and go to state 108


State 97

   47 bloc: opn_bloc liste_declarations liste_instructions close_bloc •

    $default  reduce using rule 47 (bloc)


State 98

   28 instruction: bloc •

    $default  reduce using rule 28 (instruction)


State 99

   44 affectation: variable • '=' expression
   63 expression: variable •

    '='  shift, and go to state 109

    $default  reduce using rule 63 (expression)


State 100

   24 instruction: expression • ';'
   54 expression: expression • PLUS expression
   55           | expression • MOINS expression
   56           | expression • MUL expression
   57           | expression • DIV expression
   58           | expression • LSHIFT expression
   59           | expression • RSHIFT expression
   60           | expression • BAND expression
   61           | expression • BOR expression

    PLUS    shift, and go to state 46
    MOINS   shift, and go to state 47
    MUL     shift, and go to state 48
    DIV     shift, and go to state 49
    LSHIFT  shift, and go to state 50
    RSHIFT  shift, and go to state 51
    BAND    shift, and go to state 52
    BOR     shift, and go to state 53
    ';'     shift, and go to state 110


State 101

   30 iteration: FOR '(' • affectation ';' condition ';' affectation ')' instruction

    IDENTIFICATEUR  shift, and go to state 111

    affectation  go to state 112
    variable     go to state 113


State 102

   31 iteration: WHILE '(' • condition ')' instruction

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    MOINS           shift, and go to state 30
    NOT             shift, and go to state 114
    '('             shift, and go to state 115

    variable    go to state 32
    expression  go to state 116
    condition   go to state 117


State 103

   32 selection: IF '(' • condition ')' instruction
   33          | IF '(' • condition ')' instruction ELSE instruction

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    MOINS           shift, and go to state 30
    NOT             shift, and go to state 114
    '('             shift, and go to state 115

    variable    go to state 32
    expression  go to state 116
    condition   go to state 118


State 104

   34 selection: SWITCH '(' • expression ')' '{' liste_cases_opt default_opt '}'

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    MOINS           shift, and go to state 30
    '('             shift, and go to state 31

    variable    go to state 32
    expression  go to state 119


State 105

   40 saut: BREAK ';' •

    $default  reduce using rule 40 (saut)


State 106

   41 saut: RETURN ';' •

    $default  reduce using rule 41 (saut)


State 107

   42 saut: RETURN expression • ';'
   54 expression: expression • PLUS expression
   55           | expression • MOINS expression
   56           | expression • MUL expression
   57           | expression • DIV expression
   58           | expression • LSHIFT expression
   59           | expression • RSHIFT expression
   60           | expression • BAND expression
   61           | expression • BOR expression

    PLUS    shift, and go to state 46
    MOINS   shift, and go to state 47
    MUL     shift, and go to state 48
    DIV     shift, and go to state 49
    LSHIFT  shift, and go to state 50
    RSHIFT  shift, and go to state 51
    BAND    shift, and go to state 52
    BOR     shift, and go to state 53
    ';'     shift, and go to state 120


State 108

   23 instruction: affectation ';' •

    $default  reduce using rule 23 (instruction)


State 109

   44 affectation: variable '=' • expression

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    MOINS           shift, and go to state 30
    '('             shift, and go to state 31

    variable    go to state 32
    expression  go to state 121


State 110

   24 instruction: expression ';' •

    $default  reduce using rule 24 (instruction)


State 111

   48 variable: IDENTIFICATEUR •
   49         | IDENTIFICATEUR • dimension_utilisation

    '['  shift, and go to state 41

    $default  reduce using rule 48 (variable)

    dimension_utilisation  go to state 43


State 112

   30 iteration: FOR '(' affectation • ';' condition ';' affectation ')' instruction

    ';'  shift, and go to state 122


State 113

   44 affectation: variable • '=' expression

    '='  shift, and go to state 109


State 114

   68 condition: NOT • '(' condition ')'

    '('  shift, and go to state 123


State 115

   52 expression: '(' • expression ')'
   70 condition: '(' • condition ')'

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    MOINS           shift, and go to state 30
    NOT             shift, and go to state 114
    '('             shift, and go to state 115

    variable    go to state 32
    expression  go to state 124
    condition   go to state 125


State 116

   54 expression: expression • PLUS expression
   55           | expression • MOINS expression
   56           | expression • MUL expression
   57           | expression • DIV expression
   58           | expression • LSHIFT expression
   59           | expression • RSHIFT expression
   60           | expression • BAND expression
   61           | expression • BOR expression
   71 condition: expression • binary_comp expression

    PLUS    shift, and go to state 46
    MOINS   shift, and go to state 47
    MUL     shift, and go to state 48
    DIV     shift, and go to state 49
    LSHIFT  shift, and go to state 50
    RSHIFT  shift, and go to state 51
    BAND    shift, and go to state 52
    BOR     shift, and go to state 53
    LT      shift, and go to state 126
    GT      shift, and go to state 127
    GEQ     shift, and go to state 128
    LEQ     shift, and go to state 129
    EQ      shift, and go to state 130
    NEQ     shift, and go to state 131

    binary_comp  go to state 132


State 117

   31 iteration: WHILE '(' condition • ')' instruction
   69 condition: condition • binary_rel condition

    LAND  shift, and go to state 133
    LOR   shift, and go to state 134
    ')'   shift, and go to state 135

    binary_rel  go to state 136


State 118

   32 selection: IF '(' condition • ')' instruction
   33          | IF '(' condition • ')' instruction ELSE instruction
   69 condition: condition • binary_rel condition

    LAND  shift, and go to state 133
    LOR   shift, and go to state 134
    ')'   shift, and go to state 137

    binary_rel  go to state 136


State 119

   34 selection: SWITCH '(' expression • ')' '{' liste_cases_opt default_opt '}'
   54 expression: expression • PLUS expression
   55           | expression • MOINS expression
   56           | expression • MUL expression
   57           | expression • DIV expression
   58           | expression • LSHIFT expression
   59           | expression • RSHIFT expression
   60           | expression • BAND expression
   61           | expression • BOR expression

    PLUS    shift, and go to state 46
    MOINS   shift, and go to state 47
    MUL     shift, and go to state 48
    DIV     shift, and go to state 49
    LSHIFT  shift, and go to state 50
    RSHIFT  shift, and go to state 51
    BAND    shift, and go to state 52
    BOR     shift, and go to state 53
    ')'     shift, and go to state 138


State 120

   42 saut: RETURN expression ';' •

    $default  reduce using rule 42 (saut)


State 121

   44 affectation: variable '=' expression •
   54 expression: expression • PLUS expression
   55           | expression • MOINS expression
   56           | expression • MUL expression
   57           | expression • DIV expression
   58           | expression • LSHIFT expression
   59           | expression • RSHIFT expression
   60           | expression • BAND expression
   61           | expression • BOR expression

    PLUS    shift, and go to state 46
    MOINS   shift, and go to state 47
    MUL     shift, and go to state 48
    DIV     shift, and go to state 49
    LSHIFT  shift, and go to state 50
    RSHIFT  shift, and go to state 51
    BAND    shift, and go to state 52
    BOR     shift, and go to state 53

    $default  reduce using rule 44 (affectation)


State 122

   30 iteration: FOR '(' affectation ';' • condition ';' affectation ')' instruction

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    MOINS           shift, and go to state 30
    NOT             shift, and go to state 114
    '('             shift, and go to state 115

    variable    go to state 32
    expression  go to state 116
    condition   go to state 139


State 123

   68 condition: NOT '(' • condition ')'

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    MOINS           shift, and go to state 30
    NOT             shift, and go to state 114
    '('             shift, and go to state 115

    variable    go to state 32
    expression  go to state 116
    condition   go to state 140


State 124

   52 expression: '(' expression • ')'
   54           | expression • PLUS expression
   55           | expression • MOINS expression
   56           | expression • MUL expression
   57           | expression • DIV expression
   58           | expression • LSHIFT expression
   59           | expression • RSHIFT expression
   60           | expression • BAND expression
   61           | expression • BOR expression
   71 condition: expression • binary_comp expression

    PLUS    shift, and go to state 46
    MOINS   shift, and go to state 47
    MUL     shift, and go to state 48
    DIV     shift, and go to state 49
    LSHIFT  shift, and go to state 50
    RSHIFT  shift, and go to state 51
    BAND    shift, and go to state 52
    BOR     shift, and go to state 53
    LT      shift, and go to state 126
    GT      shift, and go to state 127
    GEQ     shift, and go to state 128
    LEQ     shift, and go to state 129
    EQ      shift, and go to state 130
    NEQ     shift, and go to state 131
    ')'     shift, and go to state 63

    binary_comp  go to state 132


State 125

   69 condition: condition • binary_rel condition
   70          | '(' condition • ')'

    LAND  shift, and go to state 133
    LOR   shift, and go to state 134
    ')'   shift, and go to state 141

    binary_rel  go to state 136


State 126

   74 binary_comp: LT •

    $default  reduce using rule 74 (binary_comp)


State 127

   75 binary_comp: GT •

    $default  reduce using rule 75 (binary_comp)


State 128

   76 binary_comp: GEQ •

    $default  reduce using rule 76 (binary_comp)


State 129

   77 binary_comp: LEQ •

    $default  reduce using rule 77 (binary_comp)


State 130

   78 binary_comp: EQ •

    $default  reduce using rule 78 (binary_comp)


State 131

   79 binary_comp: NEQ •

    $default  reduce using rule 79 (binary_comp)


State 132

   71 condition: expression binary_comp • expression

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    MOINS           shift, and go to state 30
    '('             shift, and go to state 31

    variable    go to state 32
    expression  go to state 142


State 133

   72 binary_rel: LAND •

    $default  reduce using rule 72 (binary_rel)


State 134

   73 binary_rel: LOR •

    $default  reduce using rule 73 (binary_rel)


State 135

   31 iteration: WHILE '(' condition ')' • instruction

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    IF              shift, and go to state 87
    SWITCH          shift, and go to state 88
    BREAK           shift, and go to state 89
    RETURN          shift, and go to state 90
    MOINS           shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 73

    CONSTANTE       [reduce using rule 29 (instruction)]
    CONSTANTE       [reduce using rule 43 (saut)]
    IDENTIFICATEUR  [reduce using rule 29 (instruction)]
    IDENTIFICATEUR  [reduce using rule 43 (saut)]
    FOR             [reduce using rule 29 (instruction)]
    FOR             [reduce using rule 43 (saut)]
    WHILE           [reduce using rule 29 (instruction)]
    WHILE           [reduce using rule 43 (saut)]
    IF              [reduce using rule 29 (instruction)]
    IF              [reduce using rule 43 (saut)]
    ELSE            reduce using rule 29 (instruction)
    ELSE            [reduce using rule 43 (saut)]
    SWITCH          [reduce using rule 29 (instruction)]
    SWITCH          [reduce using rule 43 (saut)]
    CASE            reduce using rule 29 (instruction)
    CASE            [reduce using rule 43 (saut)]
    DEFAULT         reduce using rule 29 (instruction)
    DEFAULT         [reduce using rule 43 (saut)]
    BREAK           [reduce using rule 29 (instruction)]
    BREAK           [reduce using rule 43 (saut)]
    RETURN          [reduce using rule 29 (instruction)]
    RETURN          [reduce using rule 43 (saut)]
    MOINS           [reduce using rule 29 (instruction)]
    MOINS           [reduce using rule 43 (saut)]
    '('             [reduce using rule 29 (instruction)]
    '('             [reduce using rule 43 (saut)]
    '{'             [reduce using rule 29 (instruction)]
    '{'             [reduce using rule 43 (saut)]
    '}'             reduce using rule 29 (instruction)
    '}'             [reduce using rule 43 (saut)]
    $default        reduce using rule 29 (instruction)

    instruction  go to state 143
    iteration    go to state 93
    selection    go to state 94
    saut         go to state 95
    affectation  go to state 96
    opn_bloc     go to state 74
    bloc         go to state 98
    variable     go to state 99
    expression   go to state 100


State 136

   69 condition: condition binary_rel • condition

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    MOINS           shift, and go to state 30
    NOT             shift, and go to state 114
    '('             shift, and go to state 115

    variable    go to state 32
    expression  go to state 116
    condition   go to state 144


State 137

   32 selection: IF '(' condition ')' • instruction
   33          | IF '(' condition ')' • instruction ELSE instruction

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    IF              shift, and go to state 87
    SWITCH          shift, and go to state 88
    BREAK           shift, and go to state 89
    RETURN          shift, and go to state 90
    MOINS           shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 73

    CONSTANTE       [reduce using rule 29 (instruction)]
    CONSTANTE       [reduce using rule 43 (saut)]
    IDENTIFICATEUR  [reduce using rule 29 (instruction)]
    IDENTIFICATEUR  [reduce using rule 43 (saut)]
    FOR             [reduce using rule 29 (instruction)]
    FOR             [reduce using rule 43 (saut)]
    WHILE           [reduce using rule 29 (instruction)]
    WHILE           [reduce using rule 43 (saut)]
    IF              [reduce using rule 29 (instruction)]
    IF              [reduce using rule 43 (saut)]
    ELSE            reduce using rule 29 (instruction)
    ELSE            [reduce using rule 43 (saut)]
    SWITCH          [reduce using rule 29 (instruction)]
    SWITCH          [reduce using rule 43 (saut)]
    CASE            reduce using rule 29 (instruction)
    CASE            [reduce using rule 43 (saut)]
    DEFAULT         reduce using rule 29 (instruction)
    DEFAULT         [reduce using rule 43 (saut)]
    BREAK           [reduce using rule 29 (instruction)]
    BREAK           [reduce using rule 43 (saut)]
    RETURN          [reduce using rule 29 (instruction)]
    RETURN          [reduce using rule 43 (saut)]
    MOINS           [reduce using rule 29 (instruction)]
    MOINS           [reduce using rule 43 (saut)]
    '('             [reduce using rule 29 (instruction)]
    '('             [reduce using rule 43 (saut)]
    '{'             [reduce using rule 29 (instruction)]
    '{'             [reduce using rule 43 (saut)]
    '}'             reduce using rule 29 (instruction)
    '}'             [reduce using rule 43 (saut)]
    $default        reduce using rule 29 (instruction)

    instruction  go to state 145
    iteration    go to state 93
    selection    go to state 94
    saut         go to state 95
    affectation  go to state 96
    opn_bloc     go to state 74
    bloc         go to state 98
    variable     go to state 99
    expression   go to state 100


State 138

   34 selection: SWITCH '(' expression ')' • '{' liste_cases_opt default_opt '}'

    '{'  shift, and go to state 146


State 139

   30 iteration: FOR '(' affectation ';' condition • ';' affectation ')' instruction
   69 condition: condition • binary_rel condition

    LAND  shift, and go to state 133
    LOR   shift, and go to state 134
    ';'   shift, and go to state 147

    binary_rel  go to state 136


State 140

   68 condition: NOT '(' condition • ')'
   69          | condition • binary_rel condition

    LAND  shift, and go to state 133
    LOR   shift, and go to state 134
    ')'   shift, and go to state 148

    binary_rel  go to state 136


State 141

   70 condition: '(' condition ')' •

    $default  reduce using rule 70 (condition)


State 142

   54 expression: expression • PLUS expression
   55           | expression • MOINS expression
   56           | expression • MUL expression
   57           | expression • DIV expression
   58           | expression • LSHIFT expression
   59           | expression • RSHIFT expression
   60           | expression • BAND expression
   61           | expression • BOR expression
   71 condition: expression binary_comp expression •

    PLUS    shift, and go to state 46
    MOINS   shift, and go to state 47
    MUL     shift, and go to state 48
    DIV     shift, and go to state 49
    LSHIFT  shift, and go to state 50
    RSHIFT  shift, and go to state 51
    BAND    shift, and go to state 52
    BOR     shift, and go to state 53

    $default  reduce using rule 71 (condition)


State 143

   31 iteration: WHILE '(' condition ')' instruction •

    $default  reduce using rule 31 (iteration)


State 144

   69 condition: condition • binary_rel condition
   69          | condition binary_rel condition •

    $default  reduce using rule 69 (condition)

    binary_rel  go to state 136


State 145

   32 selection: IF '(' condition ')' instruction •
   33          | IF '(' condition ')' instruction • ELSE instruction

    ELSE  shift, and go to state 149

    $default  reduce using rule 32 (selection)


State 146

   34 selection: SWITCH '(' expression ')' '{' • liste_cases_opt default_opt '}'

    CASE  shift, and go to state 150

    liste_cases_opt  go to state 151
    liste_cases      go to state 152
    case             go to state 153


State 147

   30 iteration: FOR '(' affectation ';' condition ';' • affectation ')' instruction

    IDENTIFICATEUR  shift, and go to state 111

    affectation  go to state 154
    variable     go to state 113


State 148

   68 condition: NOT '(' condition ')' •

    $default  reduce using rule 68 (condition)


State 149

   33 selection: IF '(' condition ')' instruction ELSE • instruction

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    IF              shift, and go to state 87
    SWITCH          shift, and go to state 88
    BREAK           shift, and go to state 89
    RETURN          shift, and go to state 90
    MOINS           shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 73

    CONSTANTE       [reduce using rule 29 (instruction)]
    CONSTANTE       [reduce using rule 43 (saut)]
    IDENTIFICATEUR  [reduce using rule 29 (instruction)]
    IDENTIFICATEUR  [reduce using rule 43 (saut)]
    FOR             [reduce using rule 29 (instruction)]
    FOR             [reduce using rule 43 (saut)]
    WHILE           [reduce using rule 29 (instruction)]
    WHILE           [reduce using rule 43 (saut)]
    IF              [reduce using rule 29 (instruction)]
    IF              [reduce using rule 43 (saut)]
    ELSE            reduce using rule 29 (instruction)
    ELSE            [reduce using rule 43 (saut)]
    SWITCH          [reduce using rule 29 (instruction)]
    SWITCH          [reduce using rule 43 (saut)]
    CASE            reduce using rule 29 (instruction)
    CASE            [reduce using rule 43 (saut)]
    DEFAULT         reduce using rule 29 (instruction)
    DEFAULT         [reduce using rule 43 (saut)]
    BREAK           [reduce using rule 29 (instruction)]
    BREAK           [reduce using rule 43 (saut)]
    RETURN          [reduce using rule 29 (instruction)]
    RETURN          [reduce using rule 43 (saut)]
    MOINS           [reduce using rule 29 (instruction)]
    MOINS           [reduce using rule 43 (saut)]
    '('             [reduce using rule 29 (instruction)]
    '('             [reduce using rule 43 (saut)]
    '{'             [reduce using rule 29 (instruction)]
    '{'             [reduce using rule 43 (saut)]
    '}'             reduce using rule 29 (instruction)
    '}'             [reduce using rule 43 (saut)]
    $default        reduce using rule 29 (instruction)

    instruction  go to state 155
    iteration    go to state 93
    selection    go to state 94
    saut         go to state 95
    affectation  go to state 96
    opn_bloc     go to state 74
    bloc         go to state 98
    variable     go to state 99
    expression   go to state 100


State 150

   38 case: CASE • CONSTANTE ':' instruction saut

    CONSTANTE  shift, and go to state 156


State 151

   34 selection: SWITCH '(' expression ')' '{' liste_cases_opt • default_opt '}'

    DEFAULT  shift, and go to state 157

    default_opt  go to state 158


State 152

   35 liste_cases_opt: liste_cases •
   36 liste_cases: liste_cases • case

    CASE  shift, and go to state 150

    $default  reduce using rule 35 (liste_cases_opt)

    case  go to state 159


State 153

   37 liste_cases: case •

    $default  reduce using rule 37 (liste_cases)


State 154

   30 iteration: FOR '(' affectation ';' condition ';' affectation • ')' instruction

    ')'  shift, and go to state 160


State 155

   33 selection: IF '(' condition ')' instruction ELSE instruction •

    $default  reduce using rule 33 (selection)


State 156

   38 case: CASE CONSTANTE • ':' instruction saut

    ':'  shift, and go to state 161


State 157

   39 default_opt: DEFAULT • ':' instruction saut

    ':'  shift, and go to state 162


State 158

   34 selection: SWITCH '(' expression ')' '{' liste_cases_opt default_opt • '}'

    '}'  shift, and go to state 163


State 159

   36 liste_cases: liste_cases case •

    $default  reduce using rule 36 (liste_cases)


State 160

   30 iteration: FOR '(' affectation ';' condition ';' affectation ')' • instruction

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    IF              shift, and go to state 87
    SWITCH          shift, and go to state 88
    BREAK           shift, and go to state 89
    RETURN          shift, and go to state 90
    MOINS           shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 73

    CONSTANTE       [reduce using rule 29 (instruction)]
    CONSTANTE       [reduce using rule 43 (saut)]
    IDENTIFICATEUR  [reduce using rule 29 (instruction)]
    IDENTIFICATEUR  [reduce using rule 43 (saut)]
    FOR             [reduce using rule 29 (instruction)]
    FOR             [reduce using rule 43 (saut)]
    WHILE           [reduce using rule 29 (instruction)]
    WHILE           [reduce using rule 43 (saut)]
    IF              [reduce using rule 29 (instruction)]
    IF              [reduce using rule 43 (saut)]
    ELSE            reduce using rule 29 (instruction)
    ELSE            [reduce using rule 43 (saut)]
    SWITCH          [reduce using rule 29 (instruction)]
    SWITCH          [reduce using rule 43 (saut)]
    CASE            reduce using rule 29 (instruction)
    CASE            [reduce using rule 43 (saut)]
    DEFAULT         reduce using rule 29 (instruction)
    DEFAULT         [reduce using rule 43 (saut)]
    BREAK           [reduce using rule 29 (instruction)]
    BREAK           [reduce using rule 43 (saut)]
    RETURN          [reduce using rule 29 (instruction)]
    RETURN          [reduce using rule 43 (saut)]
    MOINS           [reduce using rule 29 (instruction)]
    MOINS           [reduce using rule 43 (saut)]
    '('             [reduce using rule 29 (instruction)]
    '('             [reduce using rule 43 (saut)]
    '{'             [reduce using rule 29 (instruction)]
    '{'             [reduce using rule 43 (saut)]
    '}'             reduce using rule 29 (instruction)
    '}'             [reduce using rule 43 (saut)]
    $default        reduce using rule 29 (instruction)

    instruction  go to state 164
    iteration    go to state 93
    selection    go to state 94
    saut         go to state 95
    affectation  go to state 96
    opn_bloc     go to state 74
    bloc         go to state 98
    variable     go to state 99
    expression   go to state 100


State 161

   38 case: CASE CONSTANTE ':' • instruction saut

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    IF              shift, and go to state 87
    SWITCH          shift, and go to state 88
    BREAK           shift, and go to state 89
    RETURN          shift, and go to state 90
    MOINS           shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 73

    CASE      reduce using rule 29 (instruction)
    CASE      [reduce using rule 43 (saut)]
    DEFAULT   reduce using rule 29 (instruction)
    DEFAULT   [reduce using rule 43 (saut)]
    BREAK     [reduce using rule 29 (instruction)]
    BREAK     [reduce using rule 43 (saut)]
    RETURN    [reduce using rule 29 (instruction)]
    RETURN    [reduce using rule 43 (saut)]
    $default  reduce using rule 29 (instruction)

    instruction  go to state 165
    iteration    go to state 93
    selection    go to state 94
    saut         go to state 95
    affectation  go to state 96
    opn_bloc     go to state 74
    bloc         go to state 98
    variable     go to state 99
    expression   go to state 100


State 162

   39 default_opt: DEFAULT ':' • instruction saut

    CONSTANTE       shift, and go to state 28
    IDENTIFICATEUR  shift, and go to state 29
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    IF              shift, and go to state 87
    SWITCH          shift, and go to state 88
    BREAK           shift, and go to state 89
    RETURN          shift, and go to state 90
    MOINS           shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 73

    BREAK     [reduce using rule 29 (instruction)]
    BREAK     [reduce using rule 43 (saut)]
    RETURN    [reduce using rule 29 (instruction)]
    RETURN    [reduce using rule 43 (saut)]
    '}'       reduce using rule 29 (instruction)
    '}'       [reduce using rule 43 (saut)]
    $default  reduce using rule 29 (instruction)

    instruction  go to state 166
    iteration    go to state 93
    selection    go to state 94
    saut         go to state 95
    affectation  go to state 96
    opn_bloc     go to state 74
    bloc         go to state 98
    variable     go to state 99
    expression   go to state 100


State 163

   34 selection: SWITCH '(' expression ')' '{' liste_cases_opt default_opt '}' •

    $default  reduce using rule 34 (selection)


State 164

   30 iteration: FOR '(' affectation ';' condition ';' affectation ')' instruction •

    $default  reduce using rule 30 (iteration)


State 165

   38 case: CASE CONSTANTE ':' instruction • saut

    BREAK   shift, and go to state 89
    RETURN  shift, and go to state 90

    $default  reduce using rule 43 (saut)

    saut  go to state 167


State 166

   39 default_opt: DEFAULT ':' instruction • saut

    BREAK   shift, and go to state 89
    RETURN  shift, and go to state 90

    $default  reduce using rule 43 (saut)

    saut  go to state 168


State 167

   38 case: CASE CONSTANTE ':' instruction saut •

    $default  reduce using rule 38 (case)


State 168

   39 default_opt: DEFAULT ':' instruction saut •

    $default  reduce using rule 39 (default_opt)
